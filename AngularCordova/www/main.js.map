{"version":3,"sources":["./src/environments/environment.ts","./src/app/board/board.component.html","./src/app/board/board.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/board/services/ai.service.ts","./src/app/board/services/game.service.ts","./src/app/board/services/verification.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\n<div *ngFor=\"let row of cells; let row_index = index\">\n    <span *ngFor=\"let cell of row; let column_index = index\">\n        <button class=\"cell_white\" *ngIf=\"cell === 'White'\">-</button>\n        <button class=\"cell_black\" *ngIf=\"cell === 'Black'\">N</button>\n        <button class=\"cell_black_white\" (click)=\"checkerClick(row_index, column_index)\" *ngIf=\"cell === 'Black_White'\">W</button>\n        <button class=\"cell_black_black\" (click)=\"checkerClick(row_index, column_index)\" *ngIf=\"cell === 'Black_Black'\">B</button>\n        <button class=\"cell_option\" (click)=\"play(row_index, column_index)\" *ngIf=\"cell === 'Option'\">Go</button>\n        <button class=\"cell_black_selected_white\" *ngIf=\"cell === 'Black_Selected_White'\">W</button>\n        <button class=\"cell_black_selected_black\" *ngIf=\"cell === 'Black_Selected_Black'\">B</button>\n    </span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AiService } from './services/ai.service';\nimport { GameService } from './services/game.service';\nimport { VerificationService } from './services/verification.service';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.css']\n})\nexport class BoardComponent implements OnInit {\n  cells: string[][] = [];\n  checker_to_move: [number, number];\n\n  is_human_rabbit: Boolean = false;\n  now_humans_turn: Boolean = true;\n\n  constructor(private readonly verificationService: VerificationService, private readonly gameService: GameService,\n    private readonly aiService: AiService) { }\n\n  play(row_index: number, column_index: number) {\n    this.verificationService.cleanup_cells(this.cells);\n\n    const rabbit_cell: [number, number] = this.gameService\n    .make_a_move(this.cells, [this.checker_to_move[0], this.checker_to_move[1]], [row_index, column_index]);\n\n    const rabbitMoves: [number, number][] = this.verificationService.get_rabbit_moves(this.cells, rabbit_cell[0], rabbit_cell[1]);\n    const game_state: number = this.gameService.check_game_state(this.cells, rabbitMoves);\n    if(game_state !== 0) {\n      window.location.reload();\n      return;\n    }\n\n    if(this.now_humans_turn) {\n      this.now_humans_turn = false;\n      this.activateAI();\n    }\n    else {\n      this.now_humans_turn = true;\n    }\n  }\n\n  checkerClick(row_index: number, column_index: number): void {\n    if(!this.now_humans_turn) {\n      return;\n    }\n\n    this.verificationService.cleanup_cells(this.cells);\n    const is_rabbit: Boolean = this.is_rabbit_clicked(row_index, column_index);\n\n    if(is_rabbit !== this.is_human_rabbit) {\n      return;\n    }\n\n    this.verificationService.show_human_move_options(this.cells, row_index, column_index, is_rabbit);\n    this.checker_to_move = [row_index, column_index];\n  }\n\n  private activateAI() {\n    const best_decision: [number, number][] = this.aiService\n    .calculate_best_decision(this.cells, this.gameService.get_rabbit_cell(), this.gameService.get_wolf_cells());\n\n    this.checker_to_move = best_decision[0];\n    this.play(best_decision[1][0], best_decision[1][1]);\n  }\n\n  ngOnInit(): void {\n    this.gameService.game_init(this.cells);\n    this.aiService.set_ai_side(!this.is_human_rabbit);\n  }\n\n  private is_rabbit_clicked(row_index: number, column_index: number) { return this.cells[row_index][column_index] === \"Black_White\"; }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-cordova';\r\n}\r\n","\r\n<app-board></app-board>\r\n<!-- <router-outlet></router-outlet> -->","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BoardComponent } from './board/board.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BoardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { VerificationService } from './verification.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AiService {\n  is_ai_rabbit: Boolean;\n\n  set_ai_side(is_ai_rabbit: Boolean): void { this.is_ai_rabbit = is_ai_rabbit; }\n\n  constructor(private readonly verificationService: VerificationService) { }\n\n  calculate_best_decision(cells: string[][], rabbit_cell: [number, number], wolf_cells: [number, number][]): [number, number][] {\n    if(this.is_ai_rabbit) {\n      const move_options = this.verificationService.get_rabbit_moves(cells, rabbit_cell[0], rabbit_cell[1]);\n      for(const option of move_options) {\n        if(option !== undefined) {\n          return [rabbit_cell, option]\n        }\n      }\n    }\n    else {\n      for(const wolf_cell of wolf_cells) {\n        const move_options = this.verificationService.get_wolf_moves(cells, wolf_cell[0], wolf_cell[1]);\n        for(const option of move_options) {\n          if(option !== undefined) {\n            return [wolf_cell, option]\n          }\n        }\n      }\n    }\n\n    return undefined;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n  private rabbit_cell: [number, number];\n  private wolf_cells: [number, number][];\n\n  constructor() { }\n\n  get_rabbit_cell(): [number, number] { return this.rabbit_cell; }\n  get_wolf_cells(): [number, number][] { return this.wolf_cells; }\n\n  make_a_move(cells: string[][], cell_from: [number, number], cell_to: [number, number]): [number, number] {\n    const txt_cell_from: string = cells[cell_from[0]][cell_from[1]];\n    cells[cell_from[0]][cell_from[1]] = \"Black\";\n    cells[cell_to[0]][cell_to[1]] = txt_cell_from;\n\n    if(cells[cell_to[0]][cell_to[1]] === \"Black_White\") {\n      this.rabbit_cell = [cell_to[0], cell_to[1]];\n    }\n    else {\n      for(const wolf_cell of this.wolf_cells) {\n        if(wolf_cell[0] === cell_from[0] && (wolf_cell[1] === cell_from[1])) {\n          wolf_cell[0] = cell_to[0];\n          wolf_cell[1] = cell_to[1];\n          break;\n        }\n      }\n    }\n\n    return this.rabbit_cell;\n  }\n\n  check_game_state(cells: string[][], rabbitMoves: [number, number][]): number {\n    if(this.rabbit_cell[0] === 0) {\n      return 1;\n    }\n\n    for(let idx: number = 0; idx < 4; idx++) {\n      if(rabbitMoves[idx] !== undefined) {\n        return 0;\n      }\n    }\n\n    return -1;\n  }\n\n  game_init(cells: string[][]): void {\n    this.cells_init(cells);\n    this.checkers_init(cells);\n  }\n\n  private cells_init(cells: string[][]): void {\n    let nextWhite: Boolean = true;\n    for(let row: number = 0; row < 8; row++) {\n      cells[row] = [];\n      let currWhite: Boolean = nextWhite;\n      nextWhite = !nextWhite;\n      for(let column: number = 0; column < 8; column++) {\n        cells[row][column] = currWhite ? \"White\" : \"Black\";\n        currWhite = !currWhite;\n      }\n    }\n  }\n\n  private checkers_init(cells: string[][]): void {\n    for(let column: number = 1; column < 8; column += 2) {\n      cells[0][column] = \"Black_Black\";\n    }\n\n    cells[7][4] = \"Black_White\";\n    this.rabbit_cell = [7,4];\n    this.wolf_cells = [[0,1],[0,3],[0,5],[0,7]];\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VerificationService {\n  private cells_cleanup_cache: [number, number, string][] = [];\n\n  constructor() { }\n\n  cleanup_cells(cells: string[][]): void {\n    for(const cleanup_cell of this.cells_cleanup_cache) {\n      cells[cleanup_cell[0]][cleanup_cell[1]] = cleanup_cell[2];\n    }\n    this.cells_cleanup_cache = [];\n  }\n\n  show_human_move_options(cells: string[][], row_index: number, column_index: number, isRabbitClicked: Boolean): void {\n    let move_results = undefined;\n    if(isRabbitClicked) {\n      move_results = this.get_rabbit_moves(cells, row_index, column_index);\n\n      this.cells_cleanup_cache.push([row_index, column_index, cells[row_index][column_index]]);\n      cells[row_index][column_index] = \"Black_Selected_White\";\n    }\n    else {\n      move_results = this.get_wolf_moves(cells, row_index, column_index);\n\n      this.cells_cleanup_cache.push([row_index, column_index, cells[row_index][column_index]]);\n      cells[row_index][column_index] = \"Black_Selected_Black\";\n    }\n\n    for(let option of move_results) {\n\n      if(option) {\n        this.cells_cleanup_cache.push([option[0], option[1], cells[option[0]][option[1]]]);\n        cells[option[0]][option[1]] = \"Option\";\n      }\n    }\n\n  }\n\n  get_rabbit_moves(cells: string[][], row_index: number, column_index: number): [number, number][] {\n    const top_right: [number, number] = row_index > 0 && column_index < 7 && cells[row_index - 1][column_index + 1] === \"Black\" \n    ? [row_index - 1, column_index + 1] : undefined;\n\n    const top_left: [number, number] = row_index > 0 && column_index > 0 && cells[row_index - 1][column_index - 1] === \"Black\" \n    ? [row_index - 1, column_index - 1] : undefined;\n    \n    const bottom_right: [number, number] = row_index < 7 && column_index < 7 && cells[row_index + 1][column_index + 1] === \"Black\" \n    ? [row_index + 1, column_index + 1] : undefined;\n\n    const bottom_left: [number, number] = row_index < 7 && column_index > 0 && cells[row_index + 1][column_index - 1] === \"Black\" \n    ? [row_index + 1, column_index - 1] : undefined;\n\n    \n    return [top_left, top_right, bottom_right, bottom_left];\n  }\n\n  get_wolf_moves(cells: string[][], row_index: number, column_index: number): [number, number][] {\n    const bottom_right: [number, number] = row_index < 7 && column_index < 7 && cells[row_index + 1][column_index + 1] === \"Black\" \n    ? [row_index + 1, column_index + 1] : undefined;\n\n    const bottom_left: [number, number] = row_index < 7 && column_index > 0 && cells[row_index + 1][column_index - 1] === \"Black\" \n    ? [row_index + 1, column_index - 1] : undefined;\n\n    return [bottom_left, bottom_right];\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nconst bootstrap = () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule);\r\n};\r\nif (typeof window['cordova'] !== 'undefined') {\r\n  document.addEventListener('deviceready', () => {\r\n    bootstrap();\r\n  }, false);\r\n} else {\r\n  bootstrap();\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}